// Place your 全局 snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
// Placeholders with the same ids are connected.
// Example:
// "Print to console": {
// 	"scope": "javascript,typescript",
// 	"prefix": "log",
// 	"body": [
// 		"console.log('$1');",
// 		"$2"
// 	],
// 	"description": "Log output to console"
// }
/*
inline int read(){
	int s=0,w=1;
	char ch=getchar();
	while(ch<'0'||ch>'9'){if(ch=='-')w=-1;ch=getchar();}
	while(ch>='0'&&ch<='9') s=s*10+ch-'0',ch=getchar();
	return s*w;
}
*/
{
	"ACM-model": {
		"prefix": "mycpp",
		"body": [
			"#include <cstdio>",
			"#include <cstring>",
			"#include <iostream>",
			"#include <algorithm>",
			"",
			"#define rep(i, b, s) for(int i = (b); i <= (s); ++i)",
			"#define pre(i, b, s) for(int i = (b); i >= (s); --i)",
			"",
			"//#define int long long ",
			"#define endl '\\n' ",
			"#define ios ios::sync_with_stdio(false); cin.tie(0), cout.tie(0)",
			"#define all(v) (v).begin(),(v).end()",
			"",
			"using namespace std;",
			" ",
			"signed main() ",
			"{",
			"    ",
			"    ",
			"   return 0;",
			"}",
			" ",
			" ",


			
		],
		"description": "init acm model"
	},
}