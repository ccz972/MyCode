// Place your 全局 snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
// Placeholders with the same ids are connected.
// Example:
// "Print to console": {
// 	"scope": "javascript,typescript",
// 	"prefix": "log",
// 	"body": [
// 		"console.log('$1');",
// 		"$2"
// 	],
// 	"description": "Log output to console"
// }
/*
inline int read(){
	int s=0,w=1;
	char ch=getchar();
	while(ch<'0'||ch>'9'){if(ch=='-')w=-1;ch=getchar();}
	while(ch>='0'&&ch<='9') s=s*10+ch-'0',ch=getchar();
	return s*w;
}
*/
{
	"atc-model": {
		"prefix": "abc",
		"body": [
			"#include <cstdio>",
			"#include <cstring>",
			"#include <iostream>",
			"#include <algorithm>",
      "",
			"#define rep(i, a, b) for(int i(a); i <= b; ++ i) ",
      "#define dec(i, a, b) for(int i(a); i >= b; -- i) ",
      "//mt19937 mrand(random_device{}()); ",
      "//int rnd(int x) { return mrand() % x;}",
			"template <typename T> void chkmax(T &x, T y) { x = x >= y ? x : y; }",
			"template <typename T> void chkmin(T &x, T y) { x = x <= y ? x : y; }",
			"template <typename T> T abs(T x) {return x >= 0 ? x : -x;}",
			"",
			"int main() {",
			"  $0",
			"",
			"  return 0;",
			"}",			
			//scanf(\"%d\",&T);
		],
		"description": "init cf model"
	},
}