//{
	// Place your 全局 snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
//}

{
	"atc-model": {
		"prefix": "simple",
		"body": [
			"#include <bits/stdc++.h>",
      "using namespace std;",
      "typedef long long ll;",
      "",
      "#ifdef LOCAL",
      "#include <debugger>",
      "#else",
      "#define debug(...) 42",
      "#endif",
      "",
      "#define rep(i, a, b) for(int i(a); i <= b; ++ i) ",
      "#define dec(i, a, b) for(int i(a); i >= b; -- i) ",
      "",
			"template <typename T> void chkmax(T &x, T y) { x = x >= y ? x : y; }",
			"template <typename T> void chkmin(T &x, T y) { x = x <= y ? x : y; }",
			"",
      "//constexpr double pi = acos(-1);",
      "",
      "void solve();",
			"int main() {",
      "  ios::sync_with_stdio(false);",
      "  cin.tie(nullptr);",
      "",
			"  int T = 1; cin >> T; ",
			"  while(T -- ) solve();",
			"  return 0;",
			"}",
      "",			
      "void solve() {",
      "  $0",
      "",
      "}",
			//scanf(\"%d\",&T);
		],
		"description": "init simple model"
	},
}