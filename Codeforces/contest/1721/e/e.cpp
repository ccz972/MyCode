/* Generated by powerful Codeforces Tool
 * Author: nanfeng1997
 * Time: 2022-08-27 22:35:22
**/

#include <bits/stdc++.h>
using namespace std;
typedef long long ll;

#ifdef LOCAL
#include <debugger>
#else
#define debug(...) 42
#endif

template <typename T> void chkmax(T &x, T y) { x = max(x, y); }
template <typename T> void chkmin(T &x, T y) { x = min(x, y); }
constexpr int N = 1E6 + 100;
constexpr int M = 1E5 + 100;

char s[N], t[M][20];
int nxt[N];
int ans[N * 4];
struct Trie {
  int c[N * 2][26], tot;
  bool v[N * 2];
  void init() {
    while (tot) {
      v[tot] = 0;
      memset(c[tot], 0, sizeof(c[tot]));
      --tot;
    }
    memset(c[0], 0, sizeof(c[0]));
    v[0] = 0;
  }
  int insert(char s[], int len, int start) {
    int now = start;
    for (int i = 0; i < len; ++i) {
      int to = s[i] - 'a';
      if (!c[now][to])c[now][to] = ++tot;
      now = c[now][to];
    }
    v[now] = 1;
    return now;
  }
  // bool query(char s[], int len, int start) {
  //   int now = start;
  //   for (int i = len - 1; ~i; --i) {
  //     int to = s[i] - 'a';
  //     if (!c[now][to])return 0;
  //     now = c[now][to];
  //   }
  //   return v[now];
  // }


  bool query(char s[], int len, int start) {
    int now = start;
    for (int i = 0; i < len; i ++ ) {
      int to = s[i] - 'a';
      if (!c[now][to])return 0;
      now = c[now][to];
    }
    return v[now];
  }


} A;

void solve() {
  
  scanf("%s", s);
  int n = strlen(s);

  nxt[0] = -1;
  for (int i = 1, j = -1; i < n; i ++ ) {
    while (j >= 0 && s[j + 1] != s[i]) j = nxt[j];
    if (s[j + 1] == s[i]) ++ j;
    nxt[i] = j;
  }



  int q; cin >> q;
  A.init();
  int node = A.insert(s, n, 0);

  for (int i = 0; i < q; i ++ ) {
    scanf("%s", t[i]);
    A.insert(t[i], strlen(t[i]), node);
  }

  // bool query(char s[], int len, int start) {
  //   int now = start;
  //   for (int i = len - 1; ~i; --i) {
  //     int to = s[i] - 'a';
  //     if (!c[now][to])return 0;
  //     now = c[now][to];
  //   }
  //   return v[now];
  // }

  for (int i = 0; i < q; i ++ ) {
    int now = node;
    int m = strlen(t[i]);
    for (int j = 0; j < m; j ++ ) {
      int to = t[i][j] - 'a';
      int lst = now;
      now = A.c[now][to];
      if (!ans[now]) {
        int k;
        if (j == 0) {
          k = nxt[n - 1];
        } else {
          k = ans[lst];
        }
        while (k >= 0 && (k >= n - 1 ? t[i][k - n + 1] : s[k + 1]) != t[i][j]) k = nxt[k];
        if((k >= n - 1 ? t[i][k - n + 1] : s[k + 1]) == t[i][j]) ++ k;
        ans[now] = k;
      }
      cout << ans[now] + 1 << " \n"[j == m - 1];
    }
  }


}

int main() {
  // cin.tie(nullptr)->sync_with_stdio(false);
  int T = 1; // cin >> T;
  while (T --) solve();
  return 0;
}

/*
 *
 *　　┏┓　　　┏┓+ +
 *　┏┛┻━━━┛┻┓ + +
 *　┃　　　　　　　┃
 *　┃　　　━　　　┃ ++ + + +
 *  ████━████+
 *  ◥██◤　◥██◤ +
 *　┃　　　┻　　　┃
 *　┃　　　　　　　┃ + +
 *　┗━┓　　　┏━┛
 *　　　┃　　　┃ + + + +Code is far away from 　
 *　　　┃　　　┃ + bug with the animal protecting
 *　　　┃　 　 ┗━━━┓ 神兽保佑,代码无bug　
 *　　　┃ 　　　　　　 ┣┓
 *　　  ┃ 　　　　　 　┏┛
 *　    ┗┓┓┏━┳┓┏┛ + + + +
 *　　　　┃┫┫　┃┫┫
 *　　　　┗┻┛　┗┻┛+ + + +
 */
