/* Generated by powerful Codeforces Tool
 * Author: nanfeng1997
 * Time: 2022-09-12 22:36:26
**/

#include <bits/stdc++.h>
using namespace std;
typedef long long ll;

#ifdef LOCAL
#include <debugger>
#else
#define debug(...) 42
#endif

template <typename T> void chkmax(T &x, T y) { x = max(x, y); }
template <typename T> void chkmin(T &x, T y) { x = min(x, y); }

const int MOD = 1000000007;

inline int mod(int x) {return x >= MOD ? x - MOD : x;}

inline int ksm(int a, int b) {
  int ret = 1; a = mod(a);
  for(; b; b >>= 1, a = 1LL * a * a % MOD) if(b & 1) ret = 1LL * ret * a % MOD;
  return ret;
}

template<int MOD> 
struct modint {
  int x;
  modint() {x = 0; }
  modint(int y) {x = y;}
  inline modint inv() const { return modint{ksm(x, MOD - 2)}; }
  explicit inline operator int() { return x; }
  friend inline modint operator + (const modint &a, const modint& b) { return modint(mod(a.x + b.x)); }
  friend inline modint operator - (const modint &a, const modint& b) { return modint(mod(a.x - b.x + MOD)); }
  friend inline modint operator * (const modint &a, const modint& b) { return modint(1ll * a.x * b.x % MOD); }
  friend inline modint operator / (const modint &a, const modint& b) { return modint(1ll * a.x * b.inv().x % MOD); }
  friend inline modint operator + (const modint &a, const int& b) { return modint(mod(a.x + b)); }
  friend inline modint operator - (const modint &a, const int& b) { return modint(mod(a.x - b + MOD)); }
  friend inline modint operator * (const modint &a, const int& b) { return modint(1ll * a.x * b % MOD); }
  friend inline modint operator / (const modint &a, const int& b) { return modint(1ll * a.x * ksm(b, MOD - 2) % MOD); } 
  friend inline modint operator - (const modint &a) { return modint(mod(MOD - a.x)); }
  friend inline modint& operator += (modint &a, const modint& b) { return a = a + b; }
  friend inline modint& operator -= (modint &a, const modint& b) { return a = a - b; }
  friend inline modint& operator *= (modint &a, const modint& b) { return a = a * b; }
  friend inline modint& operator /= (modint &a, const modint& b) { return a = a / b; }
  friend inline modint& operator += (modint &a, const int& b) { return a = a + b; }
  friend inline modint& operator -= (modint &a, const int& b) { return a = a - b; }
  friend inline modint& operator *= (modint &a, const int& b) { return a = a * b; }
  friend inline modint& operator /= (modint &a, const int& b) { return a = a / b; }
  friend auto &operator >> (istream &i, modint &a) {return i >> a.x; }
  friend auto &operator << (ostream &o, const modint &z) { return o << z.x; }
  inline bool operator == (const modint &b) { return x == b.x; }
  inline bool operator != (const modint &b) { return x != b.x; }
  inline bool operator != (const int &b) { return x != b; }
  inline bool operator < (const modint &a) { return x < a.x; }
  inline bool operator <= (const modint &a) { return x <= a.x; }
  inline bool operator > (const modint &a) { return x > a.x; }
  inline bool operator >= (const modint &a) { return x >= a.x; }
  operator int() const {
    return x;
  }
  // inline void
};

typedef modint<MOD> mint;

inline mint ksm(mint a, int b, mint ret = 1) {
	for(; b; b >>= 1, a = a * a ) if(b & 1) ret = ret * a ;
	return ret;
}

constexpr int N = 510;

int n, m, ne[N];
mint f[N][N];
char s[N], t[N];
bool vis[N][N];

void solve() {
  scanf("%s%s", s, t);
  int n = strlen(s), m = strlen(t);
  ne[0] = -1;
  for (int i = 1; i <= n; i ++ ) ne[i] = 0;
  for (int i = 2, k = 0; i <= m; i ++, k ++ ) {
    while (k != -1 && t[i - 1] != t[k]) k = ne[k];
    ne[i] = k + 1;
  }
  vector<int> a; a.emplace_back(-m);
  for (int i = 0, k = 0; i <= n; i ++, k ++ ) {
    if (k == m) a.emplace_back(i - m), k = ne[k];
    while (k != -1 && t[k] != s[i]) k = ne[k];
  }
  int sz = a.size();

  for (int i = 0; i <= sz; i ++ ) {
    for (int j = 0; j <= sz; j ++ ) {
      f[i][j] = 0; vis[i][j] = false;
    }
  }

  f[0][0] = 1; vis[0][0] = true;

  for (int i = 1; i < sz; i ++ ) {
    int lst; for (lst = i - 1; lst >= 0 && a[lst] + m - 1 >= a[i]; lst -- );
    for (int j = lst; j >= 0 && a[j] + m - 1 >= a[lst]; j -- ) {
      for (int k = 1; k <= sz; k ++ ) if (vis[j][k - 1]) {
        f[i][k] += f[j][k - 1]; vis[i][k] = true;
      }
    }
  }

  int mi = INT_MAX;

  for (int i = sz - 1; i >= 0 && a[i] + m - 1 >= a.back(); i -- ) {
    for (int j = 0; j <= sz - 1; j ++ ) if (vis[i][j]) {
      chkmin(mi, j); break;
    }
  }
  
  if (mi == INT_MAX) {
    cout << "0 1\n";
    return ;
  }

  mint ans = 0;

  for (int i = sz - 1; i >= 0 && a[i] + m - 1 >= a.back(); i -- ) {
    ans += f[i][mi];
  }

  cout << mi << " " << ans << "\n";



}

int main() {
  int T = 1; scanf("%d", &T);
  while (T --) solve();
  return 0;
}

/*
 *
 *　　┏┓　　　┏┓+ +
 *　┏┛┻━━━┛┻┓ + +
 *　┃　　　　　　　┃
 *　┃　　　━　　　┃ ++ + + +
 *  ████━████+
 *  ◥██◤　◥██◤ +
 *　┃　　　┻　　　┃
 *　┃　　　　　　　┃ + +
 *　┗━┓　　　┏━┛
 *　　　┃　　　┃ + + + +Code is far away from 　
 *　　　┃　　　┃ + bug with the animal protecting
 *　　　┃　 　 ┗━━━┓ 神兽保佑,代码无bug　
 *　　　┃ 　　　　　　 ┣┓
 *　　  ┃ 　　　　　 　┏┛
 *　    ┗┓┓┏━┳┓┏┛ + + + +
 *　　　　┃┫┫　┃┫┫
 *　　　　┗┻┛　┗┻┛+ + + +
 */
