/* Generated by powerful Codeforces Tool
 * Author: nanfeng1997
 * Time: 2022-08-30 22:50:51
**/

#include <bits/stdc++.h>
using namespace std;
typedef long long ll;

#ifdef LOCAL
#include <debugger>
#else
#define debug(...) 42
#endif

template <typename T> void chkmax(T &x, T y) { x = max(x, y); }
template <typename T> void chkmin(T &x, T y) { x = min(x, y); }

constexpr int N = 1010;

ll s[N][N];

void solve1() {
  memset(s, 0, sizeof s);
  int n, Q; cin >> n >> Q;
  vector<pair<int, int> > a(n);
  for (auto &[l, r]: a) {
    cin >> l >> r;
    s[l][r] += 1ll * l * r;
  }

  for (int i = 1; i < N; i ++ ) {
    for (int j = 1; j < N; j ++ ) {
      s[i][j] += s[i - 1][j] + s[i][j - 1] - s[i - 1][j - 1];
    }
  }
  
  while (Q -- ) {
    int l1, r1, l2, r2; 
    cin >> l1 >> r1 >> l2 >> r2;
    l1 ++, r1 ++, l2 --, r2 -- ;
    ll ans;
    if (l1 > l2 || r1 > r2) {
      ans = 0;
    } else {
      ans = s[l2][r2] - s[l1 - 1][r2] - s[l2][r1 - 1] + s[l1 - 1][r1 - 1];
    }
    cout << ans << "\n";
  }
  
}

template <typename T>
class fenwick {
 public:
  vector<T> fenw;
  int n;
 
  fenwick(int _n) : n(_n) {
    fenw.resize(n);
  }
 
  void modify(int x, T v) {
    while (x < n) {
      fenw[x] += v;
      x |= (x + 1);
    }
  }
 
  T get(int x) {
    T v{};
    while (x >= 0) {
      v += fenw[x];
      x = (x & (x + 1)) - 1;
    }
    return v;
  }

  T get(int l, int r) {
    return get(r) - get(l - 1);
  }

};

struct node {
  int h, w, t, id;
  bool operator < (const node &T) const {
    if (w != T.w) return w < T.w;
    if (h != T.h) return h < T.h;
    return t < T.t;
  }
};

void solve2() {
  int n, q; cin >> n >> q;
  vector<node> a;
  for (int i = 1; i <= n; i ++ ) {
    int h, w; cin >> h >> w;
    a.push_back({h, w, -2, 0});
  }

  for (int i = 0; i < q; i ++ ) {
    int hs, ws, hb, wb; cin >> hs >> ws >> hb >> wb;
    a.push_back({hb - 1, wb - 1, 1, i});
    a.push_back({hb - 1, ws, -1, i});
    a.push_back({hs, wb - 1, -1, i});
    a.push_back({hs, ws, 1, i}); 
  }

  sort(a.begin(), a.end());
  vector<long long> ans(q);
  fenwick<long long> fen(1010);
  for (auto [h, w, t, id]: a) {
    if (t == -2) {
      fen.modify(h, 1ll * h * w);
    } else {
      ans[id] += 1ll * t * fen.get(h);
    }
  }
  for (auto x: ans) {
    cout << x << "\n";
  }
}

int main() {
  cin.tie(nullptr)->sync_with_stdio(false);
  int T = 1; cin >> T;
  while (T --) solve2();
  return 0;
}

/*
 *
 *　　┏┓　　　┏┓+ +
 *　┏┛┻━━━┛┻┓ + +
 *　┃　　　　　　　┃
 *　┃　　　━　　　┃ ++ + + +
 *  ████━████+
 *  ◥██◤　◥██◤ +
 *　┃　　　┻　　　┃
 *　┃　　　　　　　┃ + +
 *　┗━┓　　　┏━┛
 *　　　┃　　　┃ + + + +Code is far away from 　
 *　　　┃　　　┃ + bug with the animal protecting
 *　　　┃　 　 ┗━━━┓ 神兽保佑,代码无bug　
 *　　　┃ 　　　　　　 ┣┓
 *　　  ┃ 　　　　　 　┏┛
 *　    ┗┓┓┏━┳┓┏┛ + + + +
 *　　　　┃┫┫　┃┫┫
 *　　　　┗┻┛　┗┻┛+ + + +
 */
