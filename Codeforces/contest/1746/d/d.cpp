/* Generated by powerful Codeforces Tool
 * Author: SmartNanfeng
 * Time: 2022-10-15 22:35:05
**/

#include <bits/stdc++.h>
using namespace std;
typedef long long ll;

#ifdef LOCAL
#include <debugger>
#else
#define debug(...) 42
#endif

template <typename T> void chkmax(T &x, T y) { x = max(x, y); }
template <typename T> void chkmin(T &x, T y) { x = min(x, y); }

void solve() {
  int n, k; cin >> n >> k;
  vector<vector<int> > son(n + 1);
  for (int i = 2; i <= n; i ++ ) {
    int fa; cin >> fa;
    son[fa].emplace_back(i);
  }

  vector<ll> score(n + 1);
  for (int i = 1; i <= n; i ++ ) cin >> score[i];
  
  using PLL = pair<ll, ll>;

  function<PLL(int, int)> dfs = [&] (int u, int p) -> PLL {
    if (son[u].empty()) {
      return make_pair(score[u] * p, score[u] * (p + 1));
    }
    vector<ll> now;
    ll sum = 0;
    int sz = son[u].size();
    for (auto &v: son[u]) {
      auto [fi, se] = dfs(v, p / sz);
      now.emplace_back(se - fi);
      sum += fi;
    }

    sort(now.begin(), now.end(), greater<ll>());

    int use = p % sz;

    for (int i = 0; i < use; i ++ ) {
      sum += now[i];
    }

    return make_pair(sum + score[u] * p, sum + now[use] + score[u] * (p + 1));
  };


  cout << dfs(1, k).first << "\n";

}

int main() {
  cin.tie(nullptr)->sync_with_stdio(false);
  int T = 1; cin >> T;
  while (T --) solve();
  return 0;
}

/*
 *
 *　　┏┓　　　┏┓+ +
 *　┏┛┻━━━┛┻┓ + +
 *　┃　　　　　　　┃
 *　┃　　　━　　　┃ ++ + + +
 *  ████━████+
 *  ◥██◤　◥██◤ +
 *　┃　　　┻　　　┃
 *　┃　　　　　　　┃ + +
 *　┗━┓　　　┏━┛
 *　　　┃　　　┃ + + + +Code is far away from 　
 *　　　┃　　　┃ + bug with the animal protecting
 *　　　┃　 　 ┗━━━┓ 神兽保佑,代码无bug　
 *　　　┃ 　　　　　　 ┣┓
 *　　  ┃ 　　　　　 　┏┛
 *　    ┗┓┓┏━┳┓┏┛ + + + +
 *　　　　┃┫┫　┃┫┫
 *　　　　┗┻┛　┗┻┛+ + + +
 */
