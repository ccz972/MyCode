/* Generated by powerful Codeforces Tool
 * Author: SmartNanfeng
 * Time: 2022-10-23 15:50:11
**/

#include <bits/stdc++.h>
using namespace std;
typedef long long ll;

#ifdef LOCAL
#include <debugger>
#else
#define debug(...) 42
#endif

template <typename T> void chkmax(T &x, T y) { x = max(x, y); }
template <typename T> void chkmin(T &x, T y) { x = min(x, y); }

void solve() {
  int n, m, p, q; cin >> n >> m >> p >> q;
  vector<string> s(n); for (auto &x: s) cin >> x;

  vector<vector<pair<int, int> > > son(n * m + 1);

  auto add = [&] (int i, int j, int v, int w) -> void {
    if (i < 0 || i >= n || j < 0 || j >= m) return ;
    int u = i * m + j;
    son[u].emplace_back(v, w);
  };

  for (int i = 0; i < n; i ++ ) {
    for (int j = 0; j < m; j ++ ) {
      int now = i * m + j;
      if (s[i][j] == 'L') {
        add(i - 1, j + 1, now, p); add(i + 1, j + 1, now, p); add(i, j + 2, now, q); 
      } else if (s[i][j] == 'R') {
        add(i - 1, j - 1, now, p); add(i + 1, j - 1, now, p); add(i, j - 2, now, q); 
      } else if (s[i][j] == 'U') {
        add(i + 1, j - 1, now, p); add(i + 1, j + 1, now, p); add(i + 2, j, now, q);
      } else if (s[i][j] == 'D') {
        add(i - 1, j - 1, now, p); add(i - 1, j + 1, now, p); add(i - 2, j, now, q);
      } else if (s[i][j] == '.') {
        son[n * m].emplace_back(now, 0);
      }
    }
  }

  struct node {
    int u; ll dis; 
    bool operator < (const node &T) const {
      return dis > T.dis;
    }
  };

  priority_queue<node> pq;
  pq.push({n * m, 0});
  vector<bool> st(n * m + 1, false);
  vector<ll> dist(n * m + 1, 1E18);
  dist[n * m] = 0;
  while (!pq.empty()) {
    auto [u, dis] = pq.top(); pq.pop();
    if (st[u]) continue;
    st[u] = true;
    for (auto &[v, w]: son[u]) {
      if (dist[v] > dis + w) {
        dist[v] = dis + w;
        pq.push({v, dist[v]});
      }
    }
  }

  

  auto get = [&] (int i, int j) -> ll {
    if (i < 0 || i >= n || j < 0 || j >= m) return 1E18;
    int u = i * m + j;
    return dist[u];
  };

  ll ans = 1E18;

  for (int i = 0; i < n; i ++ ) {
    for (int j = 0; j < m; j ++ ) {
      int u = i * m + j;
      chkmin(ans, dist[u] + get(i + 1, j));
      chkmin(ans, dist[u] + get(i, j + 1));
    }
  }

  if (ans >= 1E17) ans = -1;

  cout << ans << "\n";

}

int main() {
  cin.tie(nullptr)->sync_with_stdio(false);
  int T = 1; // cin >> T;
  while (T --) solve();
  return 0;
}

/*
 *
 *　　┏┓　　　┏┓+ +
 *　┏┛┻━━━┛┻┓ + +
 *　┃　　　　　　　┃
 *　┃　　　━　　　┃ ++ + + +
 *  ████━████+
 *  ◥██◤　◥██◤ +
 *　┃　　　┻　　　┃
 *　┃　　　　　　　┃ + +
 *　┗━┓　　　┏━┛
 *　　　┃　　　┃ + + + +Code is far away from 　
 *　　　┃　　　┃ + bug with the animal protecting
 *　　　┃　 　 ┗━━━┓ 神兽保佑,代码无bug　
 *　　　┃ 　　　　　　 ┣┓
 *　　  ┃ 　　　　　 　┏┛
 *　    ┗┓┓┏━┳┓┏┛ + + + +
 *　　　　┃┫┫　┃┫┫
 *　　　　┗┻┛　┗┻┛+ + + +
 */
