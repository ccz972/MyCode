"struct oula {",
"  constexpr int N = 1e6 + 10;",
"  long long phi[N];",
"  int p[N], cnt;",
"  bool vis[N];",
"  void oula(int n) {",
"    phi[1] = 1;",
"    for(int i = 2; i <= n; i ++ ) {",
"      if(!vis[i]) phi[i] = i - 1, p[cnt ++ ] = i;",
"      for(int j = 0; p[j] <= n / i; j ++ ) {",
"        vis[p[j] * i] = true;",
"        if(i % p[j] == 0) {",
"          phi[i * p[j]] = phi[i] * p[j];",
"          break;",
"        } else {",
"          phi[i * p[j]] = phi[i] * (p[j] - 1);",
"        }",
"      }",
"    }  ",
"  }",
"};",
