{"name":"Local: gen","url":"d:\\code\\practice\\专题\\分治\\gen.cpp","tests":[{"id":1668479793284,"input":"struct DSU_DEL {\n  int n;\n  vector<int> f, sz; \n  vector<pair<int&, int> > his_sz;\n  vector<pair<int&, int> > his_fa;\n  DSU_DEL(int _n) : n(_n), f(_n), sz(_n, 1) { iota(f.begin(), f.end(), 0); }\n\n  int find(int x) {\n    while (x != f[x]) x = f[x]; \n    return x;\n  }\n\n  bool same(int u, int v) {\n    return find(u) == find(v);\n  }\n  int size(int u) {\n    return sz[find(u)];\n  }\n  void merge(int u, int v) {\n    int fu = find(u), fv = find(v);\n    if (fu == fv) return ;\n    if (sz[fu] < sz[fv]) swap(fu, fv);\n    his_sz.push_back({sz[fu], sz[fu]});\n    sz[fu] += sz[fv];\n    his_fa.push_back({f[fv], f[fv]});\n    f[fv] = fu;\n  }\n\n  int history() {\n    return his_fa.size();\n  }\n\n  void roll(int h) {\n    while (his_fa.size() > h) {\n      his_fa.back().first = his_fa.back().second;\n      his_fa.pop_back();\n      his_sz.back().first = his_sz.back().second;\n      his_sz.pop_back();\n    }\n  }\n};","output":""}],"interactive":false,"memoryLimit":1024,"timeLimit":3000,"srcPath":"d:\\code\\practice\\专题\\分治\\gen.cpp","group":"local","local":true}